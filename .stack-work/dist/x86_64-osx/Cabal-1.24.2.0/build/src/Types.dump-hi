
==================== FINAL INTERFACE ====================
2017-12-04 06:36:47.790976 UTC

interface STMFun-0.1.0.0-6G4PBj6PJwZ899gTLbnI1r:Types 8002
  interface hash: 144df13485fbe42f6bb2850fbf5fb15a
  ABI hash: 9f2635068e832b1dd54fb27c0c8470d2
  export-list hash: 844825776d180c5e4136f90ffe7e4979
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 76adf31fae06a88e0bf510b5d268b7c5
  sig of: Nothing
  used TH splices: True
  where
exports:
  Types.emptyLineNo
  Types.emptySymbolTable
  Types.incLineNo
  Types.modifyLineNo
  Types.modifySteps
  Types.App
  Types.Env{Types.Env envLineNo envSteps envSymTable}
  Types.EnvLineNo
  Types.EnvSteps
  Types.EnvSymTable
  Types.HasAttributes{Types.attributes}
  Types.HasCurrentNo{Types.currentNo}
  Types.HasLineNo{Types.lineNo}
  Types.HasParent{Types.parent}
  Types.HasPreviousNo{Types.previousNo}
  Types.HasSteps{Types.steps}
  Types.HasSymTable{Types.symTable}
  Types.Identifier
  Types.LineNo{Types.LineNo lineNoCurrentNo lineNoPreviousNo}
  Types.SymAttribute{Types.FunAttr Types.IdAttr}
  Types.SymAttributesMap
  Types.SymTable{Types.SymTable symTableAttributes symTableParent}
module dependencies:
package dependencies: StateVar-1.1.0.4@StateVar-1.1.0.4-5dJbnTVECtEAhfJXPZKdbO
                      adjunctions-4.3@adjunctions-4.3-A5jfd1yrmaY4DRMJuiquBp
                      array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu
                      bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      call-stack-0.1.0@call-stack-0.1.0-FYVrCPXGP9EGAuTW32963O
                      comonad-5.0.2@comonad-5.0.2-Fq9Xy9jdx6uIyJZn00E6Yc
                      containers-0.5.7.1@containers-0.5.7.1
                      contravariant-1.4@contravariant-1.4-29zF0Im431177ovfbHYCGv
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      distributive-0.5.3@distributive-0.5.3-IX4kyVcHAyoH4uFYrsjY1R
                      exceptions-0.8.3@exceptions-0.8.3-ADEDRATtUrMK1JW4zMQ9U
                      free-4.12.4@free-4.12.4-C2gBQV0m8J42HxqSLTFyVx
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol
                      integer-gmp-1.0.0.1
                      kan-extensions-5.0.2@kan-extensions-5.0.2-8LTJJ1zQJWB7SfewWXUuqX
                      lens-4.15.4@lens-4.15.4-Km66e7WFRbEC7HnDdV2JDW
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      prelude-extras-0.4.0.3@prelude-extras-0.4.0.3-BhL9U5k7NtGJn1itwIHt2Y
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh
                      profunctors-5.2.1@profunctors-5.2.1-Ga89Nyw0d7LBEIoX4AZ6gT
                      reflection-2.1.2@reflection-2.1.2-Bem12O1xFGSHr4C2Hyu1c4
                      semigroupoids-5.2.1@semigroupoids-5.2.1-Db8txM8kTsI6Y49CY6g5Jn
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      template-haskell-2.11.1.0
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      th-abstraction-0.2.6.0@th-abstraction-0.2.6.0-HRFJgpoqs5HJ5LgHnjmMhQ
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-compat-0.5.1.4@transformers-compat-0.5.1.4-IuFogs8HAVUJBWVNMhtssu
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC
                      vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu:Data.Orphans
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Generic
         reflection-2.1.2@reflection-2.1.2-Bem12O1xFGSHr4C2Hyu1c4:Data.Reflection
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Fusion.Bundle
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
family instance modules: adjunctions-4.3@adjunctions-4.3-A5jfd1yrmaY4DRMJuiquBp:Data.Functor.Rep
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Biff
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Clown
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Fix
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Flip
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Join
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Joker
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Product
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Sum
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Tannen
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Wrapped
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         kan-extensions-5.0.2@kan-extensions-5.0.2-8LTJJ1zQJWB7SfewWXUuqX:Data.Functor.Day
                         kan-extensions-5.0.2@kan-extensions-5.0.2-8LTJJ1zQJWB7SfewWXUuqX:Data.Functor.Yoneda
                         lens-4.15.4@lens-4.15.4-Km66e7WFRbEC7HnDdV2JDW:Control.Lens.At
                         lens-4.15.4@lens-4.15.4-Km66e7WFRbEC7HnDdV2JDW:Control.Lens.Internal.Indexed
                         lens-4.15.4@lens-4.15.4-Km66e7WFRbEC7HnDdV2JDW:Control.Lens.Reified
                         lens-4.15.4@lens-4.15.4-Km66e7WFRbEC7HnDdV2JDW:Control.Lens.Tuple
                         lens-4.15.4@lens-4.15.4-Km66e7WFRbEC7HnDdV2JDW:Control.Lens.Wrapped
                         lens-4.15.4@lens-4.15.4-Km66e7WFRbEC7HnDdV2JDW:Control.Lens.Zoom
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Control.Monad.Primitive
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Data.Primitive.Array
                         profunctors-5.2.1@profunctors-5.2.1-Ga89Nyw0d7LBEIoX4AZ6gT:Data.Profunctor.Rep
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
                         th-abstraction-0.2.6.0@th-abstraction-0.2.6.0-HRFJgpoqs5HJ5LgHnjmMhQ:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashSet
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Primitive
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Storable
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed.Base
import  -/  base-4.9.1.0:Control.Monad.IO.Class 1a4384f66ee999caf5366398edb6ca7b
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Conc.Sync 8d0a228e5fc4d8c110495066f4d52ea1
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base 8b155a212edaca6c85bcefe65a8bc505
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Strict f81ee5f2f6ed64270eb463b87b6da821
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  lens-4.15.4@lens-4.15.4-Km66e7WFRbEC7HnDdV2JDW:Control.Lens 51c282815697462fb4c0814abcb89573
import  -/  lens-4.15.4@lens-4.15.4-Km66e7WFRbEC7HnDdV2JDW:Control.Lens.Getter fbeb15b7035564fc797e427366be2a86
import  -/  lens-4.15.4@lens-4.15.4-Km66e7WFRbEC7HnDdV2JDW:Control.Lens.Setter 2ba84291b39c66d4fb563b9eaed1d93d
import  -/  lens-4.15.4@lens-4.15.4-Km66e7WFRbEC7HnDdV2JDW:Control.Lens.TH ee2327b22bd8e33159fe319d450ee351
import  -/  lens-4.15.4@lens-4.15.4-Km66e7WFRbEC7HnDdV2JDW:Control.Lens.Type 69935f8f37896297f57e4a0c66e745a8
import  -/  mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6:Control.Monad.Reader 0a25f5000d6974b16ed96a739eacaeb6
import  -/  mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6:Control.Monad.Reader.Class 9573b8d2ba4bcf8261d19527e0170c4d
import  -/  stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Concurrent.STM 3662559905a40ae5adbc3e935ac706c8
import  -/  stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Concurrent.STM.TVar 8271fdeaf6f41f205dbe31243cf91390
import  -/  transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Reader 1b607a084a390ae0e50e8f8dcbf2541a
2911ef24ce2a230122274bc80d9bdbe6
  $fHasAttributesSymTableMap ::
    Types.HasAttributes Types.SymTable Types.SymAttributesMap
  DFunId
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Types.$fHasAttributesSymTableMap_$cattributes
                  `cast`
                (Sym (Types.N:HasAttributes[0]
                          <Types.SymTable>_N <Types.SymAttributesMap>_N)) -}
e63cbc1c43d292357f63a5a09a03cf06
  $fHasAttributesSymTableMap_$cattributes ::
    Control.Lens.Type.Lens' Types.SymTable Types.SymAttributesMap
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: Types.SymAttributesMap -> f Types.SymAttributesMap)
                   (ds :: Types.SymTable) ->
                 case ds of wild { Types.SymTable x1 x2 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ Types.SymAttributesMap
                   @ Types.SymTable
                   (\ (y1 :: Types.SymAttributesMap) -> Types.SymTable x1 y1)
                   (f1 x2) }) -}
d719bc9a3a608730f82bbfd04678f3af
  $fHasCurrentNoLineNoInt ::
    Types.HasCurrentNo Types.LineNo GHC.Types.Int
  DFunId
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Types.$fHasCurrentNoLineNoInt_$ccurrentNo
                  `cast`
                (Sym (Types.N:HasCurrentNo[0]
                          <Types.LineNo>_N <GHC.Types.Int>_N)) -}
31961c52ba79fa564c257c7918056b16
  $fHasCurrentNoLineNoInt_$ccurrentNo ::
    Control.Lens.Type.Lens' Types.LineNo GHC.Types.Int
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: GHC.Types.Int -> f GHC.Types.Int)
                   (ds :: Types.LineNo) ->
                 case ds of wild { Types.LineNo dt x2 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ GHC.Types.Int
                   @ Types.LineNo
                   (\ (y1 :: GHC.Types.Int) -> Types.$WLineNo y1 x2)
                   (f1 (GHC.Types.I# dt)) }) -}
4809b772eabe1482348c5e406c5c2fe6
  $fHasLineNoEnvTVar :: Types.HasLineNo Types.Env Types.EnvLineNo
  DFunId
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Types.$fHasLineNoEnvTVar_$clineNo
                  `cast`
                (Sym (Types.N:HasLineNo[0] <Types.Env>_N <Types.EnvLineNo>_N)) -}
f84e5692966ecd979411e4a21589bde4
  $fHasLineNoEnvTVar_$clineNo ::
    Control.Lens.Type.Lens' Types.Env Types.EnvLineNo
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: Types.EnvLineNo -> f Types.EnvLineNo)
                   (ds :: Types.Env) ->
                 case ds of wild { Types.Env dt dt1 dt2 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ Types.EnvLineNo
                   @ Types.Env
                   (\ (y1 :: Types.EnvLineNo) ->
                    case y1 of dt3 { GHC.Conc.Sync.TVar dt4 -> Types.Env dt dt4 dt2 })
                   (f1 (GHC.Conc.Sync.TVar @ Types.LineNo dt1)) }) -}
1bc552e854d94c538b5f914556b6441b
  $fHasParentSymTableMaybe ::
    Types.HasParent Types.SymTable (GHC.Base.Maybe Types.SymTable)
  DFunId
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Types.$fHasParentSymTableMaybe_$cparent
                  `cast`
                (Sym (Types.N:HasParent[0]
                          <Types.SymTable>_N <GHC.Base.Maybe Types.SymTable>_N)) -}
80581d85c3822bdc783099f6f17308a0
  $fHasParentSymTableMaybe_$cparent ::
    Control.Lens.Type.Lens'
      Types.SymTable (GHC.Base.Maybe Types.SymTable)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: GHC.Base.Maybe Types.SymTable
                          -> f (GHC.Base.Maybe Types.SymTable))
                   (ds :: Types.SymTable) ->
                 case ds of wild { Types.SymTable x1 x2 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ (GHC.Base.Maybe Types.SymTable)
                   @ Types.SymTable
                   (\ (y1 :: GHC.Base.Maybe Types.SymTable) -> Types.SymTable y1 x2)
                   (f1 x1) }) -}
341644d43e0e8f814aaf9eed04b429b5
  $fHasPreviousNoLineNoMaybe ::
    Types.HasPreviousNo Types.LineNo (GHC.Base.Maybe Types.LineNo)
  DFunId
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Types.$fHasPreviousNoLineNoMaybe_$cpreviousNo
                  `cast`
                (Sym (Types.N:HasPreviousNo[0]
                          <Types.LineNo>_N <GHC.Base.Maybe Types.LineNo>_N)) -}
5f70f3948d0306950a229243ebfe0ac8
  $fHasPreviousNoLineNoMaybe_$cpreviousNo ::
    Control.Lens.Type.Lens' Types.LineNo (GHC.Base.Maybe Types.LineNo)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: GHC.Base.Maybe Types.LineNo
                          -> f (GHC.Base.Maybe Types.LineNo))
                   (ds :: Types.LineNo) ->
                 case ds of wild { Types.LineNo dt x2 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ (GHC.Base.Maybe Types.LineNo)
                   @ Types.LineNo
                   (\ (y1 :: GHC.Base.Maybe Types.LineNo) -> Types.LineNo dt y1)
                   (f1 x2) }) -}
0c188534219846bc1ac19c23d639e34a
  $fHasStepsEnvTVar :: Types.HasSteps Types.Env Types.EnvSteps
  DFunId
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Types.$fHasStepsEnvTVar_$csteps
                  `cast`
                (Sym (Types.N:HasSteps[0] <Types.Env>_N <Types.EnvSteps>_N)) -}
06c2a877e49caa41d1bf167fa148ae9d
  $fHasStepsEnvTVar_$csteps ::
    Control.Lens.Type.Lens' Types.Env Types.EnvSteps
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: Types.EnvSteps -> f Types.EnvSteps)
                   (ds :: Types.Env) ->
                 case ds of wild { Types.Env dt dt1 dt2 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ Types.EnvSteps
                   @ Types.Env
                   (\ (y1 :: Types.EnvSteps) ->
                    case y1 of dt3 { GHC.Conc.Sync.TVar dt4 -> Types.Env dt dt1 dt4 })
                   (f1 (GHC.Conc.Sync.TVar @ GHC.Types.Int dt2)) }) -}
94454f045fe02cfdb1cf6fa98349046d
  $fHasSymTableEnvTVar ::
    Types.HasSymTable Types.Env Types.EnvSymTable
  DFunId
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Types.$fHasSymTableEnvTVar_$csymTable
                  `cast`
                (Sym (Types.N:HasSymTable[0]
                          <Types.Env>_N <Types.EnvSymTable>_N)) -}
e992657965b4f66e659e70e9f43ced20
  $fHasSymTableEnvTVar_$csymTable ::
    Control.Lens.Type.Lens' Types.Env Types.EnvSymTable
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: Types.EnvSymTable -> f Types.EnvSymTable)
                   (ds :: Types.Env) ->
                 case ds of wild { Types.Env dt dt1 dt2 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ Types.EnvSymTable
                   @ Types.Env
                   (\ (y1 :: Types.EnvSymTable) ->
                    case y1 of dt3 { GHC.Conc.Sync.TVar dt4 -> Types.Env dt4 dt1 dt2 })
                   (f1 (GHC.Conc.Sync.TVar @ Types.SymTable dt)) }) -}
3451df4db1b9fcd9e4af8c3cacace6b9
  $fShowLineNo :: GHC.Show.Show Types.LineNo
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Types.LineNo
                  Types.$fShowLineNo_$cshowsPrec
                  Types.$fShowLineNo_$cshow
                  Types.$fShowLineNo_$cshowList -}
3451df4db1b9fcd9e4af8c3cacace6b9
  $fShowLineNo1 :: Types.LineNo -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Types.LineNo) ->
                 case w of ww { Types.LineNo ww1 ww2 ->
                 Types.$w$cshowsPrec 0# ww1 ww2 }) -}
3451df4db1b9fcd9e4af8c3cacace6b9
  $fShowLineNo_$cshow :: Types.LineNo -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(U,1*U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Types.LineNo) ->
                 case w of ww { Types.LineNo ww1 ww2 -> Types.$w$cshow ww1 ww2 }) -}
3451df4db1b9fcd9e4af8c3cacace6b9
  $fShowLineNo_$cshowList :: [Types.LineNo] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Types.LineNo
                   Types.$fShowLineNo1) -}
3451df4db1b9fcd9e4af8c3cacace6b9
  $fShowLineNo_$cshowsPrec ::
    GHC.Types.Int -> Types.LineNo -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U(U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Types.LineNo) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Types.LineNo ww3 ww4 ->
                 Types.$w$cshowsPrec ww1 ww3 ww4 } }) -}
777c6e060d90d08bdc066e9f783e3863
  $fShowSymAttribute :: GHC.Show.Show Types.SymAttribute
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Types.SymAttribute
                  Types.$fShowSymAttribute_$cshowsPrec
                  Types.$fShowSymAttribute_$cshow
                  Types.$fShowSymAttribute_$cshowList -}
777c6e060d90d08bdc066e9f783e3863
  $fShowSymAttribute1 :: Types.SymAttribute -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: Types.SymAttribute) (w1 :: GHC.Base.String) ->
                 Types.$w$cshowsPrec1 0# w w1) -}
7a6058f0665e052990b3c3f521dad539
  $fShowSymAttribute2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FunAttr "#) -}
1dbbac30ea66c2ce5e31a6171073f369
  $fShowSymAttribute3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "IdAttr "#) -}
777c6e060d90d08bdc066e9f783e3863
  $fShowSymAttribute_$cshow :: Types.SymAttribute -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Types.SymAttribute) ->
                 Types.$fShowSymAttribute_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
777c6e060d90d08bdc066e9f783e3863
  $fShowSymAttribute_$cshowList ::
    [Types.SymAttribute] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Types.SymAttribute
                   Types.$fShowSymAttribute1) -}
777c6e060d90d08bdc066e9f783e3863
  $fShowSymAttribute_$cshowsPrec ::
    GHC.Types.Int -> Types.SymAttribute -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Types.SymAttribute)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Types.$w$cshowsPrec1 ww1 w1 w2 }) -}
4865a42cd5945355bb77fb509660dd4c
  $fShowSymTable :: GHC.Show.Show Types.SymTable
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Types.SymTable
                  Types.$fShowSymTable_$cshowsPrec
                  Types.$fShowSymTable_$cshow
                  Types.$fShowSymTable_$cshowList -}
4865a42cd5945355bb77fb509660dd4c
  $fShowSymTable1 :: Types.SymTable -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Types.SymTable) ->
                 case w of ww { Types.SymTable ww1 ww2 ->
                 Types.$w$cshowsPrec2 0# ww1 ww2 }) -}
4865a42cd5945355bb77fb509660dd4c
  $fShowSymTable_$cshow :: Types.SymTable -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Types.SymTable) ->
                 case w of ww { Types.SymTable ww1 ww2 ->
                 Types.$w$cshow1 ww1 ww2 }) -}
4865a42cd5945355bb77fb509660dd4c
  $fShowSymTable_$cshowList :: [Types.SymTable] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Types.SymTable
                   Types.$fShowSymTable1) -}
4865a42cd5945355bb77fb509660dd4c
  $fShowSymTable_$cshowsPrec ::
    GHC.Types.Int -> Types.SymTable -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Types.SymTable) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Types.SymTable ww3 ww4 ->
                 Types.$w$cshowsPrec2 ww1 ww3 ww4 } }) -}
64a400d26dd3ade81ec643b9268822c6
  $tc'C:HasAttributes :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1279022789533120631##
                   1006664619401126541##
                   Types.$trModule
                   Types.$tc'C:HasAttributes1) -}
63e2a48e549b03463ed5f8cf8e3c4570
  $tc'C:HasAttributes1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C:HasAttributes"#) -}
09cdc771336526ea04344ccb80be71f8
  $tc'C:HasCurrentNo :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4531886371002905931##
                   733733005600633103##
                   Types.$trModule
                   Types.$tc'C:HasCurrentNo1) -}
3887ea0ba41ae4c0050d28472d1efbcf
  $tc'C:HasCurrentNo1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C:HasCurrentNo"#) -}
aba0a8ba9fed5cc3178dc48a5b75e5a2
  $tc'C:HasLineNo :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1243390499281384621##
                   15816943552128277544##
                   Types.$trModule
                   Types.$tc'C:HasLineNo1) -}
fffcbe039bb4353dbcc0e4fb224bb998
  $tc'C:HasLineNo1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C:HasLineNo"#) -}
7788d8e6a16da10b1ab16a16739b692a
  $tc'C:HasParent :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15383961700481361026##
                   3771110967465842539##
                   Types.$trModule
                   Types.$tc'C:HasParent1) -}
c52ba154beb49a4839ca0be14448c2dd
  $tc'C:HasParent1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C:HasParent"#) -}
6f9938898270394c527180bcd032586f
  $tc'C:HasPreviousNo :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6529749147911054543##
                   11712855141887583600##
                   Types.$trModule
                   Types.$tc'C:HasPreviousNo1) -}
483e911fe6cb433b58f36a2c1bd291a8
  $tc'C:HasPreviousNo1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C:HasPreviousNo"#) -}
41a6b5e573d020b8de46bd4b3cbb83f9
  $tc'C:HasSteps :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6928679782262645854##
                   5935918368022317769##
                   Types.$trModule
                   Types.$tc'C:HasSteps1) -}
f3f7fab1b712c7a20c53456caabb8a20
  $tc'C:HasSteps1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C:HasSteps"#) -}
a3c129728db0bb645fb4dd110ab7016a
  $tc'C:HasSymTable :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9193351592862611471##
                   4055061927965577137##
                   Types.$trModule
                   Types.$tc'C:HasSymTable1) -}
1c4d5ccc28f367d979fb6be621dfcb16
  $tc'C:HasSymTable1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C:HasSymTable"#) -}
8f6576ec14034e196c846570a8999f75
  $tc'Env :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17039722588984511254##
                   17610004591282265181##
                   Types.$trModule
                   Types.$tc'Env1) -}
4e9f01cf1b0e52fea6c4f1d3cd037027
  $tc'Env1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Env"#) -}
ab39be28c35ffd4c558823d873fd1b39
  $tc'FunAttr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5448798145536014455##
                   16451867204443878102##
                   Types.$trModule
                   Types.$tc'FunAttr1) -}
f3ef5988b47585ac59779787a10daf60
  $tc'FunAttr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'FunAttr"#) -}
3026b40b6fbb3039f6c3cc73c92ce9d8
  $tc'IdAttr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1415105351972132671##
                   2114955139245204014##
                   Types.$trModule
                   Types.$tc'IdAttr1) -}
0fd4c02ad5fb967138db3d34d455ee55
  $tc'IdAttr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'IdAttr"#) -}
df6dc34f1217ee33193e5e14b10a1953
  $tc'LineNo :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1742290489156892##
                   5529819431226009129##
                   Types.$trModule
                   Types.$tc'LineNo1) -}
084cca4a0257272ebddbc0d585c9bed7
  $tc'LineNo1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'LineNo"#) -}
26e4c1209aa02e03b8de2ada4355260b
  $tc'SymTable :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5262109815035085040##
                   6272957265059224914##
                   Types.$trModule
                   Types.$tc'SymTable1) -}
3ce9d9c0426a8709342a352dfe466c7e
  $tc'SymTable1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'SymTable"#) -}
b7270068864780b3a08f5146b3162dc9
  $tcEnv :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12018429542230296746##
                   8452288013868855592##
                   Types.$trModule
                   Types.$tcEnv1) -}
62fcce68b7f9be4f3cbd0bd0fc718337
  $tcEnv1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Env"#) -}
b6eb87949518eadc7e792a50da3082fd
  $tcHasAttributes :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3901316004956579438##
                   6564165585602865669##
                   Types.$trModule
                   Types.$tcHasAttributes1) -}
c50c9f0f8bfa6b2c62837d27d0a60f70
  $tcHasAttributes1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "HasAttributes"#) -}
253ca408788ec856acbffbca3c2eabeb
  $tcHasCurrentNo :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3101955464547093604##
                   13813082613848540869##
                   Types.$trModule
                   Types.$tcHasCurrentNo1) -}
3d8b73c0980d4b0295f3774c8991ea9e
  $tcHasCurrentNo1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "HasCurrentNo"#) -}
83e57442cba5697eef86f03e100b8823
  $tcHasLineNo :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   649726453788149733##
                   10305201109292241103##
                   Types.$trModule
                   Types.$tcHasLineNo1) -}
3dcd2f16e5841e9e795b717e60e167a8
  $tcHasLineNo1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "HasLineNo"#) -}
387a67eaf3202f0311427b91e71116b1
  $tcHasParent :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8212095044866619620##
                   487048773432499351##
                   Types.$trModule
                   Types.$tcHasParent1) -}
4e76a9bf29fdf8ccf4397a78fd68447a
  $tcHasParent1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "HasParent"#) -}
096524dfb10750ef9291f05604ee2dcf
  $tcHasPreviousNo :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11332391478228239026##
                   5518936123811618082##
                   Types.$trModule
                   Types.$tcHasPreviousNo1) -}
5a167b930144c8150d046194c8e5a682
  $tcHasPreviousNo1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "HasPreviousNo"#) -}
9ab87dd55ad243b08418846b8437aa7b
  $tcHasSteps :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14802332735861552267##
                   3575519796679354937##
                   Types.$trModule
                   Types.$tcHasSteps1) -}
a7bb67e77f44b377619648f381787cb1
  $tcHasSteps1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "HasSteps"#) -}
d478e2b41452a57fc548d340d6738956
  $tcHasSymTable :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4888057399121915163##
                   16733822495178152514##
                   Types.$trModule
                   Types.$tcHasSymTable1) -}
39c8efad863bb4bca7583f58a521f893
  $tcHasSymTable1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "HasSymTable"#) -}
e7af0068e495b5c175dd96e62f059642
  $tcLineNo :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5618763157418308019##
                   8797867346598350583##
                   Types.$trModule
                   Types.$tcLineNo1) -}
c7a0ad675e514f4825ed525f668340a5
  $tcLineNo1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "LineNo"#) -}
ce2fa5853414c22aaef7fc9bbe365647
  $tcSymAttribute :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   595857946558072118##
                   3372285872639844799##
                   Types.$trModule
                   Types.$tcSymAttribute1) -}
7eb3c1e82ed1d0cd01c0d583ce26208f
  $tcSymAttribute1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "SymAttribute"#) -}
d660b8371bc026e2da1602d1144f4235
  $tcSymTable :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16331724044517676697##
                   17602018069486213025##
                   Types.$trModule
                   Types.$tcSymTable1) -}
a3a1741571a717de4c75ed0081fdbaec
  $tcSymTable1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "SymTable"#) -}
84a39c52d81311b34dbc6771f9463757
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Types.$trModule2 Types.$trModule1) -}
5fd961c37ecc7305664c748ee61cad97
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Types"#) -}
50c76582b8623d99287468a505ccb6bb
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "STMFun-0.1.0.0-6G4PBj6PJwZ899gTLbnI1r"#) -}
3451df4db1b9fcd9e4af8c3cacace6b9
  $w$cshow ::
    GHC.Prim.Int# -> GHC.Base.Maybe Types.LineNo -> GHC.Base.String
  {- Arity: 2, Strictness: <L,U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Base.Maybe Types.LineNo) ->
                 Types.$w$cshowsPrec 0# ww ww1 (GHC.Types.[] @ GHC.Types.Char)) -}
4865a42cd5945355bb77fb509660dd4c
  $w$cshow1 ::
    GHC.Base.Maybe Types.SymTable
    -> Types.SymAttributesMap -> GHC.Base.String
  {- Arity: 2, Strictness: <L,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.Maybe Types.SymTable)
                   (ww1 :: Types.SymAttributesMap) ->
                 Types.$w$cshowsPrec2 0# ww ww1 (GHC.Types.[] @ GHC.Types.Char)) -}
3451df4db1b9fcd9e4af8c3cacace6b9
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> GHC.Prim.Int# -> GHC.Base.Maybe Types.LineNo -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S,U><L,U><L,1*U>, Inline: [0] -}
777c6e060d90d08bdc066e9f783e3863
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> Types.SymAttribute -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><S,1*U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (w :: Types.SymAttribute)
                   (w1 :: GHC.Base.String) ->
                 case w of wild {
                   Types.IdAttr b1
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11#) of wild1 {
                        GHC.Types.False
                        -> GHC.Base.++
                             @ GHC.Types.Char
                             Types.$fShowSymAttribute3
                             (GHC.Types.:
                                @ GHC.Types.Char
                                GHC.Show.shows6
                                (GHC.Show.showLitString
                                   b1
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 w1)))
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Types.$fShowSymAttribute3
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.shows6
                                   (GHC.Show.showLitString
                                      b1
                                      (GHC.Types.:
                                         @ GHC.Types.Char
                                         GHC.Show.shows6
                                         (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 w1))))) }
                   Types.FunAttr b1
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11#) of wild1 {
                        GHC.Types.False
                        -> GHC.Base.++
                             @ GHC.Types.Char
                             Types.$fShowSymAttribute2
                             (GHC.Types.:
                                @ GHC.Types.Char
                                GHC.Show.shows6
                                (GHC.Show.showLitString
                                   b1
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 w1)))
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Types.$fShowSymAttribute2
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.shows6
                                   (GHC.Show.showLitString
                                      b1
                                      (GHC.Types.:
                                         @ GHC.Types.Char
                                         GHC.Show.shows6
                                         (GHC.Types.:
                                            @ GHC.Types.Char
                                            GHC.Show.shows4
                                            w1))))) } }) -}
4865a42cd5945355bb77fb509660dd4c
  $w$cshowsPrec2 ::
    GHC.Prim.Int#
    -> GHC.Base.Maybe Types.SymTable
    -> Types.SymAttributesMap
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S,U><L,1*U><L,1*U>, Inline: [0] -}
0919edde2cd1d720be714552576a7784
  type App =
    Control.Monad.Trans.Reader.ReaderT Types.Env GHC.Types.IO :: * -> *
d8b04d9701173887da34b4dabd43e690
  data Env
    = Env {envSymTable :: {-# UNPACK #-}Types.EnvSymTable,
           envLineNo :: {-# UNPACK #-}Types.EnvLineNo,
           envSteps :: {-# UNPACK #-}Types.EnvSteps}
88a430a793b9e0c1bb22cd34d4886bd3
  type EnvLineNo = GHC.Conc.Sync.TVar Types.LineNo
f6fb7d289a778651d9fee921fcde217e
  type EnvSteps = GHC.Conc.Sync.TVar GHC.Types.Int
66e5f98e3eab87aea772cb4b6ac6967e
  type EnvSymTable = GHC.Conc.Sync.TVar Types.SymTable
2911ef24ce2a230122274bc80d9bdbe6
  class HasAttributes s a | s -> a where
    attributes :: Control.Lens.Type.Lens' s a
    {-# MINIMAL attributes #-}
d719bc9a3a608730f82bbfd04678f3af
  class HasCurrentNo s a | s -> a where
    currentNo :: Control.Lens.Type.Lens' s a
    {-# MINIMAL currentNo #-}
4809b772eabe1482348c5e406c5c2fe6
  class HasLineNo s a | s -> a where
    lineNo :: Control.Lens.Type.Lens' s a
    {-# MINIMAL lineNo #-}
1bc552e854d94c538b5f914556b6441b
  class HasParent s a | s -> a where
    parent :: Control.Lens.Type.Lens' s a
    {-# MINIMAL parent #-}
341644d43e0e8f814aaf9eed04b429b5
  class HasPreviousNo s a | s -> a where
    previousNo :: Control.Lens.Type.Lens' s a
    {-# MINIMAL previousNo #-}
0c188534219846bc1ac19c23d639e34a
  class HasSteps s a | s -> a where
    steps :: Control.Lens.Type.Lens' s a
    {-# MINIMAL steps #-}
94454f045fe02cfdb1cf6fa98349046d
  class HasSymTable s a | s -> a where
    symTable :: Control.Lens.Type.Lens' s a
    {-# MINIMAL symTable #-}
2085ceecd10ccd7ad7a4754e852472b5
  type Identifier = GHC.Base.String
3451df4db1b9fcd9e4af8c3cacace6b9
  data LineNo
    = LineNo {lineNoCurrentNo :: {-# UNPACK #-}GHC.Types.Int,
              lineNoPreviousNo :: GHC.Base.Maybe Types.LineNo}
    RecFlag: Recursive
777c6e060d90d08bdc066e9f783e3863
  data SymAttribute
    = IdAttr Types.Identifier | FunAttr Types.Identifier
44d3834329756635994cf1a0893c6923
  type SymAttributesMap =
    Data.Map.Base.Map Types.Identifier Types.SymAttribute
4865a42cd5945355bb77fb509660dd4c
  data SymTable
    = SymTable {symTableParent :: GHC.Base.Maybe Types.SymTable,
                symTableAttributes :: Types.SymAttributesMap}
    RecFlag: Recursive
83e705af15a6597818d325d411e8c245
  emptyLineNo :: Types.LineNo
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Types.LineNo 0# (GHC.Base.Nothing @ Types.LineNo)) -}
08ffa23f6205ef183e055885a562fd5d
  emptySymbolTable :: Types.SymTable
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Types.SymTable
                   (GHC.Base.Nothing @ Types.SymTable)
                   (Data.Map.Base.Tip @ Types.Identifier @ Types.SymAttribute)) -}
806cd8d5d18ed181399e752d0ea597c0
  envLineNo :: Types.Env -> Types.EnvLineNo
  RecSel Left Types.Env
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,U,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Env) ->
                 case ds of wild { Types.Env dt dt1 dt2 ->
                 GHC.Conc.Sync.TVar @ Types.LineNo dt1 }) -}
9927e47a12df92fa00c5963c89a48405
  envSteps :: Types.Env -> Types.EnvSteps
  RecSel Left Types.Env
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Env) ->
                 case ds of wild { Types.Env dt dt1 dt2 ->
                 GHC.Conc.Sync.TVar @ GHC.Types.Int dt2 }) -}
884d05d119be6c88520dd1930940f6c2
  envSymTable :: Types.Env -> Types.EnvSymTable
  RecSel Left Types.Env
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(U,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Env) ->
                 case ds of wild { Types.Env dt dt1 dt2 ->
                 GHC.Conc.Sync.TVar @ Types.SymTable dt }) -}
e1794cafd22b49c8ec2ea378595f4065
  incLineNo :: (GHC.Num.Num a, Types.HasCurrentNo t a) => a -> t -> t
  {- Arity: 3,
     Strictness: <L,U(C(C1(U)),A,A,A,A,A,A)><C(C(S)),1*C1(C1(U))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Types.incLineNo1
                  `cast`
                (forall (a :: <*>_N) (t :: <*>_N).
                 <GHC.Num.Num a>_R
                 ->_R <Types.HasCurrentNo t a>_R
                 ->_R <a>_R
                 ->_R <t>_R
                 ->_R Data.Functor.Identity.N:Identity[0] <t>_R) -}
f9dc49e4019cb568b81af9a56da04dcc
  incLineNo1 ::
    (GHC.Num.Num a, Types.HasCurrentNo t a) =>
    a -> t -> Data.Functor.Identity.Identity t
  {- Arity: 3,
     Strictness: <L,U(C(C1(U)),A,A,A,A,A,A)><C(C(S)),1*C1(C1(U))><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   @ t
                   ($dNum :: GHC.Num.Num a)
                   ($dHasCurrentNo :: Types.HasCurrentNo t a)
                   (n :: a) ->
                 $dHasCurrentNo `cast` (Types.N:HasCurrentNo[0] <t>_N <a>_N)
                   @ Data.Functor.Identity.Identity
                   Data.Functor.Identity.$fFunctorIdentity
                   (\ (ds :: a) -> GHC.Num.+ @ a $dNum ds n)
                     `cast`
                   (<a>_R ->_R Sym (Data.Functor.Identity.N:Identity[0] <a>_R))) -}
a704492e142fc3c4539e61caabf26915
  lineNoCurrentNo :: Types.LineNo -> GHC.Types.Int
  RecSel Left Types.LineNo
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(U,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.LineNo) ->
                 case ds of wild { Types.LineNo dt ds1 -> GHC.Types.I# dt }) -}
2c2116e76d475c66b01e0a3954a010ea
  lineNoPreviousNo :: Types.LineNo -> GHC.Base.Maybe Types.LineNo
  RecSel Left Types.LineNo
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.LineNo) ->
                 case ds of wild { Types.LineNo dt ds1 -> ds1 }) -}
956ae628035e7385aba9640f11af348a
  modifyLineNo ::
    (Types.HasLineNo env (GHC.Conc.Sync.TVar a),
     Control.Monad.IO.Class.MonadIO m,
     Control.Monad.Reader.Class.MonadReader env m) =>
    (a -> a) -> m ()
  {- Arity: 4,
     Strictness: <L,1*C1(U)><S(S(LC(C(S))LLL)L),U(1*U(A,1*C1(C1(U)),A,A,A),1*U)><L,1*U(A,1*U,A,A)><L,C(U)>,
     Unfolding: (\ @ env
                   @ a
                   @ (m :: * -> *)
                   ($dHasLineNo :: Types.HasLineNo env (GHC.Conc.Sync.TVar a))
                   ($dMonadIO :: Control.Monad.IO.Class.MonadIO m)
                   ($dMonadReader :: Control.Monad.Reader.Class.MonadReader env m)
                   (eta :: a -> a) ->
                 let {
                   lvl9 :: GHC.Types.IO () -> m ()
                   = Control.Monad.IO.Class.liftIO @ m $dMonadIO @ ()
                 } in
                 let {
                   lvl10 :: (GHC.Conc.Sync.TVar a
                             -> Data.Functor.Const.Const
                                  (GHC.Conc.Sync.TVar a) (GHC.Conc.Sync.TVar a))
                            -> env -> Data.Functor.Const.Const (GHC.Conc.Sync.TVar a) env
                   = $dHasLineNo
                       `cast`
                     (Types.N:HasLineNo[0] <env>_N <GHC.Conc.Sync.TVar a>_N)
                       @ (Data.Functor.Const.Const (GHC.Conc.Sync.TVar a))
                       (Data.Functor.Const.$fFunctorConst @ (GHC.Conc.Sync.TVar a))
                 } in
                 GHC.Base.>>=
                   @ m
                   (Control.Monad.IO.Class.$p1MonadIO @ m $dMonadIO)
                   @ env
                   @ ()
                   (Control.Monad.Reader.Class.ask @ env @ m $dMonadReader)
                   (\ (env1 :: env) ->
                    lvl9
                      (GHC.Prim.atomically#
                         @ ()
                         (\ (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                          case (lvl10
                                  (Types.modifyLineNo1 @ a)
                                    `cast`
                                  (<GHC.Conc.Sync.TVar a>_R
                                   ->_R Sym (Data.Functor.Const.N:Const[0]
                                                 <*>_N
                                                 <GHC.Conc.Sync.TVar a>_R
                                                 <GHC.Conc.Sync.TVar a>_P))
                                  env1)
                                 `cast`
                               (Data.Functor.Const.N:Const[0]
                                    <*>_N
                                    <GHC.Conc.Sync.TVar a>_R
                                    <env>_P) of wild { GHC.Conc.Sync.TVar tvar# ->
                          case GHC.Prim.readTVar#
                                 @ GHC.Prim.RealWorld
                                 @ a
                                 tvar#
                                 eta1 of ds1 { (#,#) ipv ipv1 ->
                          case eta ipv1 of vx { DEFAULT ->
                          case GHC.Prim.writeTVar#
                                 @ GHC.Prim.RealWorld
                                 @ a
                                 tvar#
                                 vx
                                 ipv of s2# { DEFAULT ->
                          (# s2#, GHC.Tuple.() #) } } } }))
                        `cast`
                      (Sym (GHC.Types.N:IO[0] <()>_R)))) -}
2f9646f41122c168d3c9e6c404b782fc
  modifyLineNo1 :: GHC.Conc.Sync.TVar a -> GHC.Conc.Sync.TVar a
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ @ a (tpl :: GHC.Conc.Sync.TVar a) -> tpl) -}
8249578a2e1acf67cbe19ecbcc2c0b3f
  modifySteps ::
    (Types.HasSteps s (GHC.Conc.Sync.TVar a),
     Control.Monad.IO.Class.MonadIO m,
     Control.Monad.Reader.Class.MonadReader s m) =>
    (a -> a) -> m ()
  {- Arity: 4,
     Strictness: <L,1*C1(U)><S(S(LC(C(S))LLL)L),U(1*U(A,1*C1(C1(U)),A,A,A),1*U)><L,1*U(A,1*U,A,A)><L,C(U)>,
     Unfolding: (\ @ s
                   @ a
                   @ (m :: * -> *)
                   ($dHasSteps :: Types.HasSteps s (GHC.Conc.Sync.TVar a))
                   ($dMonadIO :: Control.Monad.IO.Class.MonadIO m)
                   ($dMonadReader :: Control.Monad.Reader.Class.MonadReader s m)
                   (eta :: a -> a) ->
                 let {
                   lvl9 :: GHC.Types.IO () -> m ()
                   = Control.Monad.IO.Class.liftIO @ m $dMonadIO @ ()
                 } in
                 let {
                   lvl10 :: (GHC.Conc.Sync.TVar a
                             -> Data.Functor.Const.Const
                                  (GHC.Conc.Sync.TVar a) (GHC.Conc.Sync.TVar a))
                            -> s -> Data.Functor.Const.Const (GHC.Conc.Sync.TVar a) s
                   = $dHasSteps
                       `cast`
                     (Types.N:HasSteps[0] <s>_N <GHC.Conc.Sync.TVar a>_N)
                       @ (Data.Functor.Const.Const (GHC.Conc.Sync.TVar a))
                       (Data.Functor.Const.$fFunctorConst @ (GHC.Conc.Sync.TVar a))
                 } in
                 GHC.Base.>>=
                   @ m
                   (Control.Monad.IO.Class.$p1MonadIO @ m $dMonadIO)
                   @ s
                   @ ()
                   (Control.Monad.Reader.Class.ask @ s @ m $dMonadReader)
                   (\ (env :: s) ->
                    lvl9
                      (GHC.Prim.atomically#
                         @ ()
                         (\ (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                          case (lvl10
                                  (Types.modifyLineNo1 @ a)
                                    `cast`
                                  (<GHC.Conc.Sync.TVar a>_R
                                   ->_R Sym (Data.Functor.Const.N:Const[0]
                                                 <*>_N
                                                 <GHC.Conc.Sync.TVar a>_R
                                                 <GHC.Conc.Sync.TVar a>_P))
                                  env)
                                 `cast`
                               (Data.Functor.Const.N:Const[0]
                                    <*>_N
                                    <GHC.Conc.Sync.TVar a>_R
                                    <s>_P) of wild { GHC.Conc.Sync.TVar tvar# ->
                          case GHC.Prim.readTVar#
                                 @ GHC.Prim.RealWorld
                                 @ a
                                 tvar#
                                 eta1 of ds1 { (#,#) ipv ipv1 ->
                          case eta ipv1 of vx { DEFAULT ->
                          case GHC.Prim.writeTVar#
                                 @ GHC.Prim.RealWorld
                                 @ a
                                 tvar#
                                 vx
                                 ipv of s2# { DEFAULT ->
                          (# s2#, GHC.Tuple.() #) } } } }))
                        `cast`
                      (Sym (GHC.Types.N:IO[0] <()>_R)))) -}
56489813c92644a204927e155306c4c7
  symTableAttributes :: Types.SymTable -> Types.SymAttributesMap
  RecSel Left Types.SymTable
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.SymTable) ->
                 case ds of wild { Types.SymTable ds1 ds2 -> ds2 }) -}
a87c3c845a4b3322892a7db765ef62ce
  symTableParent :: Types.SymTable -> GHC.Base.Maybe Types.SymTable
  RecSel Left Types.SymTable
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.SymTable) ->
                 case ds of wild { Types.SymTable ds1 ds2 -> ds1 }) -}
instance Types.HasAttributes [Types.SymTable, Data.Map.Base.Map]
  = Types.$fHasAttributesSymTableMap
instance Types.HasCurrentNo [Types.LineNo, GHC.Types.Int]
  = Types.$fHasCurrentNoLineNoInt
instance Types.HasLineNo [Types.Env, GHC.Conc.Sync.TVar]
  = Types.$fHasLineNoEnvTVar
instance Types.HasParent [Types.SymTable, GHC.Base.Maybe]
  = Types.$fHasParentSymTableMaybe
instance Types.HasPreviousNo [Types.LineNo, GHC.Base.Maybe]
  = Types.$fHasPreviousNoLineNoMaybe
instance Types.HasSteps [Types.Env, GHC.Conc.Sync.TVar]
  = Types.$fHasStepsEnvTVar
instance Types.HasSymTable [Types.Env, GHC.Conc.Sync.TVar]
  = Types.$fHasSymTableEnvTVar
instance GHC.Show.Show [Types.LineNo] = Types.$fShowLineNo
instance GHC.Show.Show [Types.SymAttribute]
  = Types.$fShowSymAttribute
instance GHC.Show.Show [Types.SymTable] = Types.$fShowSymTable
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

